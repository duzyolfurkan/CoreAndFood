@model IPagedList<CoreAndFood.Data.Models.Food>
@using CoreAndFood.Data
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Food List</h1>
<br />

<table class="table table-bordered">
    <tr>
        <th>ID</th>
        <th>Food Name</th>
        <th>Price</th>
        <th>Stock</th>
        <th>Category Name</th>
        <th>Delete</th>
        <th>Update</th>
        <th>Details</th>
    </tr>

    @foreach (var x in Model)
    {

        <tr>
            <!-- //Kategori adlarının getirilmesi için yapılan LINQ sorgusu -->
            @{
                Context db = new Context();
                int categoryID = db.Foods.Where(a => a.FoodID == x.FoodID).FirstOrDefault().CategoryID;
                string categoryName = db.Categories.Where(b => b.CategoryID == categoryID).FirstOrDefault().CategoryName.ToString();
            }

            <td>@x.FoodID</td>
            <td>@x.FoodName</td>
            <td>@x.Price</td>
            <td>@x.Stock</td>
            <td>@categoryName </td>
            <td> <a href="/Food/DeleteFood/@x.FoodID" class="btn btn-danger">Delete</a> </td>
            <td> <a href="/Food/GetFood/@x.FoodID" class="btn btn-success">Update</a> </td>
            <td> <a href="#" class="btn btn-info">Details</a> </td>

        </tr>
    }

</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new {page}))

<a href="/Food/AddFood" class="btn btn-primary">New Food</a>
